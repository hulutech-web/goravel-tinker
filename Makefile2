# 判断操作系统，定义不同的变量
ifeq ($(OS),Windows_NT)
    CHECK_CMD_EXISTS := if not exist "%GOPATH%\bin\yaegi.exe" (echo 1) else (echo 0)
    INSTALL_CMD := go install github.com/traefik/yaegi/cmd/yaegi@v0.15.0
    SED_CMD := powershell -Command "Get-ChildItem -Path. -Filter 'goravel-app-models.go' | ForEach-Object { (Get-Content $_.FullName) -replace 'package tinker', 'package symbols' | Set-Content $_.FullName }"
    MOVE_CMD := powershell -Command "Move-Item -Path goravel-app-models.go -Destination $(TARGET_DIR)"
else
    CHECK_CMD_EXISTS := if ! command -v yaegi &> /dev/null; then echo 1; else echo 0; fi
    INSTALL_CMD := go install github.com/traefik/yaegi/cmd/yaegi@v0.15.0
    SED_CMD := sed -i '' 's/package tinker/package symbols/' goravel-app-models.go
    MOVE_CMD := mv goravel-app-models.go $(TARGET_DIR)/
endif

# 定义要执行的命令
YAEGI_CMD := yaegi extract
SOURCE_DIR := goravel/app/models
TARGET_DIR := ./symbols

# 目标
all: check_yaegi extract_models move_file

# 检查是否已经安装 yaegi，如果没有则安装
check_yaegi:
	@$(CHECK_CMD_EXISTS) > /tmp/yaegi_check_result.txt 2>&1
	@if [ "$(cat /tmp/yaegi_check_result.txt)" = "1" ]; then \
	    echo "yaegi not found, installing..."; \
	    $(INSTALL_CMD); \
	else \
	    echo "yaegi is already installed"; \
	fi
	@rm -f /tmp/yaegi_check_result.txt

# 执行 yaegi extract 仅针对指定目录
extract_models:
	$(YAEGI_CMD) $(SOURCE_DIR)

# 移动生成的文件到目标目录，并修改 package 声明
move_file:
	@$(SED_CMD)
	@$(MOVE_CMD)
	@echo "Moved and updated package name in goravel-app-models.go to 'symbols'"

.PHONY: all check_yaegi extract_models move_file



