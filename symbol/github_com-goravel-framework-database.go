// Code generated by 'yaegi extract github.com/goravel/framework/database'. DO NOT EDIT.

package symbol

import (
	"github.com/goravel/framework/database"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/goravel/framework/database/database"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BindingOrm":        reflect.ValueOf(constant.MakeFromLiteral("\"goravel.orm\"", token.STRING, 0)),
		"BindingSeeder":     reflect.ValueOf(constant.MakeFromLiteral("\"goravel.seeder\"", token.STRING, 0)),
		"InitializeOrm":     reflect.ValueOf(database.InitializeOrm),
		"NewFactoryImpl":    reflect.ValueOf(database.NewFactoryImpl),
		"NewInitializeImpl": reflect.ValueOf(database.NewInitializeImpl),
		"NewOrmImpl":        reflect.ValueOf(database.NewOrmImpl),
		"NewSeederFacade":   reflect.ValueOf(database.NewSeederFacade),

		// type definitions
		"FactoryImpl":     reflect.ValueOf((*database.FactoryImpl)(nil)),
		"InitializeImpl":  reflect.ValueOf((*database.InitializeImpl)(nil)),
		"OrmImpl":         reflect.ValueOf((*database.OrmImpl)(nil)),
		"SeederFacade":    reflect.ValueOf((*database.SeederFacade)(nil)),
		"ServiceProvider": reflect.ValueOf((*database.ServiceProvider)(nil)),
	}
}
