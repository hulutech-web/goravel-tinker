// Code generated by 'yaegi extract github.com/goravel/framework/database/db'. DO NOT EDIT.

package symbol

import (
	"github.com/goravel/framework/contracts/database"
	"github.com/goravel/framework/database/db"
	"reflect"
)

func init() {
	Symbols["github.com/goravel/framework/database/db/db"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ConfigSet":     reflect.ValueOf(&db.ConfigSet).Elem(),
		"NewConfigImpl": reflect.ValueOf(db.NewConfigImpl),
		"NewDsnImpl":    reflect.ValueOf(db.NewDsnImpl),
		"Raw":           reflect.ValueOf(db.Raw),

		// type definitions
		"Config":     reflect.ValueOf((*db.Config)(nil)),
		"ConfigImpl": reflect.ValueOf((*db.ConfigImpl)(nil)),
		"Dsn":        reflect.ValueOf((*db.Dsn)(nil)),
		"DsnImpl":    reflect.ValueOf((*db.DsnImpl)(nil)),

		// interface wrapper definitions
		"_Config": reflect.ValueOf((*_github_com_goravel_framework_database_db_Config)(nil)),
		"_Dsn":    reflect.ValueOf((*_github_com_goravel_framework_database_db_Dsn)(nil)),
	}
}

// _github_com_goravel_framework_database_db_Config is an interface wrapper for Config type
type _github_com_goravel_framework_database_db_Config struct {
	IValue  interface{}
	WReads  func() []database.Config
	WWrites func() []database.Config
}

func (W _github_com_goravel_framework_database_db_Config) Reads() []database.Config {
	return W.WReads()
}
func (W _github_com_goravel_framework_database_db_Config) Writes() []database.Config {
	return W.WWrites()
}

// _github_com_goravel_framework_database_db_Dsn is an interface wrapper for Dsn type
type _github_com_goravel_framework_database_db_Dsn struct {
	IValue      interface{}
	WMysql      func(config database.Config) string
	WPostgresql func(config database.Config) string
	WSqlite     func(config database.Config) string
	WSqlserver  func(config database.Config) string
}

func (W _github_com_goravel_framework_database_db_Dsn) Mysql(config database.Config) string {
	return W.WMysql(config)
}
func (W _github_com_goravel_framework_database_db_Dsn) Postgresql(config database.Config) string {
	return W.WPostgresql(config)
}
func (W _github_com_goravel_framework_database_db_Dsn) Sqlite(config database.Config) string {
	return W.WSqlite(config)
}
func (W _github_com_goravel_framework_database_db_Dsn) Sqlserver(config database.Config) string {
	return W.WSqlserver(config)
}
